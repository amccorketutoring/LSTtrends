from pathlib import Path
import pandas as pd
import geopandas as gpd
from shapely.geometry import Point
from sklearn.preprocessing import MinMaxScaler
import matplotlib.pyplot as plt

# Define path to the data file relative to this script
HERE = Path(__file__).resolve().parent
DATA_DIR = HERE.parent.parent / "data"
csv_path = DATA_DIR / "Knox_UHI_Zonal_Stats_STRM.csv"

# Load the data
df = pd.read_csv(csv_path)

# Create a GeoDataFrame
geometry = [Point(xy) for xy in zip(df["longitude"], df["latitude"])]
gdf = gpd.GeoDataFrame(df, geometry=geometry)
gdf.set_crs(epsg=4326, inplace=True)

# Select and normalize variables for vulnerability scoring
features = gdf[["LST_Celsius", "BuildingDensity", "NDVI", "Slope"]].copy()

# Invert NDVI and Slope for vulnerability contribution
features["NDVI"] = 1 - features["NDVI"]
features["Slope"] = 1 - (features["Slope"] / features["Slope"].max())

# Normalize all values between 0â€“1
scaler = MinMaxScaler()
normalized = pd.DataFrame(scaler.fit_transform(features), columns=features.columns)

# Compute vulnerability index: average of all contributors
gdf["VulnerabilityIndex"] = normalized.mean(axis=1)

# Plot
fig, ax = plt.subplots(1, 1, figsize=(10, 8))
gdf.plot(
    column="VulnerabilityIndex",
    cmap="OrRd",
    legend=True,
    markersize=25,
    alpha=0.9,
    ax=ax,
)
plt.title("Urban Heat Vulnerability Index (0 = Low, 1 = High)")
plt.xlabel("Longitude")
plt.ylabel("Latitude")
plt.grid(True)
plt.tight_layout()
plt.show()
